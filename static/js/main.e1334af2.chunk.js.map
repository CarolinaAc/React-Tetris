{"version":3,"sources":["img/bg.png","gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetrominos","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","prev","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","acc","findIndex","unshift","push","sweepRows","updateStage","StyledStage","props","height","width","StyledCell","type","React","memo","console","log","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e1334af2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","export const STAGE_WIDTH = 12\r\nexport const STAGE_HEIGHT = 20\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\r\n  )\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y++) {\r\n    for (let x = 0; x < player.tetromino[y].length; x++) {\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          !stage[y + player.pos.y + moveY] ||\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            'clear'\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nimport bgImage from '../../img/bg.png'\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImage}) #000;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n\r\n  aside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n","export const TETROMINOS = {\r\n  0: { shape: [[0]], color: '0, 0, 0' },\r\n  I: {\r\n    shape: [\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n    ],\r\n    color: '80, 227, 230',\r\n  },\r\n  J: {\r\n    shape: [\r\n      [0, 'J', 0],\r\n      [0, 'J', 0],\r\n      ['J', 'J', 0],\r\n    ],\r\n    color: '36, 95, 223',\r\n  },\r\n  L: {\r\n    shape: [\r\n      [0, 'L', 0],\r\n      [0, 'L', 0],\r\n      [0, 'L', 'L'],\r\n    ],\r\n    color: '223, 173, 36',\r\n  },\r\n  O: {\r\n    shape: [\r\n      ['O', 'O'],\r\n      ['O', 'O'],\r\n    ],\r\n    color: '223, 217, 36',\r\n  },\r\n  S: {\r\n    shape: [\r\n      [0, 'S', 'S'],\r\n      ['S', 'S', 0],\r\n      [0, 0, 0],\r\n    ],\r\n    color: '48, 221, 56',\r\n  },\r\n  T: {\r\n    shape: [\r\n      [0, 0, 0],\r\n      ['T', 'T', 'T'],\r\n      [0, 'T', 0],\r\n    ],\r\n    color: '132, 61, 198',\r\n  },\r\n  Z: {\r\n    shape: [\r\n      ['Z', 'Z', 0],\r\n      [0, 'Z', 'Z'],\r\n      [0, 0, 0],\r\n    ],\r\n    color: '227, 78, 78',\r\n  },\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n  const tetrominos = 'IJLOSTZ'\r\n  const randTetrominos =\r\n    tetrominos[Math.floor(Math.random() * tetrominos.length)]\r\n  return TETROMINOS[randTetrominos]\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { createStage } from '../gameHelpers'\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage())\r\n  const [rowsCleared, setRowsCleared] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const updateStage = (prevStage) => {\r\n      setRowsCleared(0)\r\n\r\n      const sweepRows = (newStage) =>\r\n        newStage.reduce((acc, row) => {\r\n          if (row.findIndex((cell) => cell[0] === 0) === -1) {\r\n            setRowsCleared((prev) => prev + 1)\r\n            acc.unshift(new Array(newStage[0].length).fill([0, 'clear']))\r\n            return acc\r\n          }\r\n          acc.push(row)\r\n          return acc\r\n        }, [])\r\n\r\n      // First flush the stage\r\n      const newStage = prevStage.map((row) =>\r\n        row.map((cell) => (cell[1] === 'clear' ? [0, 'clear'] : cell))\r\n      )\r\n\r\n      // Then draw the tetromino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ]\r\n          }\r\n        })\r\n      })\r\n      if (player.collided) {\r\n        resetPlayer()\r\n        return sweepRows(newStage)\r\n      }\r\n      return newStage\r\n    }\r\n\r\n    setStage((prev) => updateStage(prev))\r\n  }, [player, resetPlayer])\r\n\r\n  return [stage, setStage, rowsCleared]\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${(props) => props.height},\r\n    calc(25vw / ${(props) => props.width})\r\n  );\r\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 2px solid #333;\r\n  width: 100%;\r\n  max-width: 25vw;\r\n  background: #111;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledCell = styled.div`\r\n  width: auto;\r\n  background: rgba(${(props) => props.color}, 0.8);\r\n  border: ${(props) => (props.type === 0 ? '0px solid' : '4px solid')};\r\n  border-bottom-color: rgba(${(props) => props.color}, 0.1);\r\n  border-right-color: rgba(${(props) => props.color}, 1);\r\n  border-top-color: rgba(${(props) => props.color}, 1);\r\n  border-left-color: rgba(${(props) => props.color}, 0.3);\r\n`\r\n","import React from 'react'\r\nimport { StyledCell } from './styles/StyledCell'\r\nimport { TETROMINOS } from '../tetrominos'\r\n\r\nconst Cell = ({ type }) => (\r\n  <StyledCell type={type} color={TETROMINOS[type].color}>\r\n    {console.log('rerender')}\r\n  </StyledCell>\r\n)\r\n\r\nexport default React.memo(Cell)\r\n","import React from 'react'\r\nimport { StyledStage } from './styles/StyledStage'\r\n\r\nimport Cell from './Cell'\r\n\r\nconst Stage = ({ stage }) => (\r\n  <StyledStage width={stage[0].length} height={stage.length}>\r\n    {stage.map((row) => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n  </StyledStage>\r\n)\r\n\r\nexport default Stage\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  border: 4px solid #333;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${(props) => (props.gameOver ? 'red' : '#999')};\r\n  background: #000;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 0.8rem;\r\n`\r\n","import React from 'react'\r\nimport { StyledDisplay } from './styles/StyledDisplay'\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\nexport default Display\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledStartButton = styled.button`\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: white;\r\n  background: #333;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n`\r\n","import React from 'react'\r\nimport { StyledStartButton } from './styles/StyledStartButton'\r\n\r\nconst StartButton = ({ callback }) => (\r\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n)\r\n\r\nexport default StartButton\r\n","import React, { useState } from 'react'\r\nimport { createStage, checkCollision } from '../gameHelpers'\r\n//styled Components\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'\r\n// Custom Hooks\r\nimport { useInterval } from '../hooks/useInterval'\r\nimport { usePlayer } from '../hooks/usePlayer'\r\nimport { useStage } from '../hooks/useStage'\r\nimport { useGameStatus } from '../hooks/useGameStatus'\r\n// Components\r\nimport Stage from './Stage'\r\nimport Display from './Display'\r\nimport StartButton from './StartButton'\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null)\r\n  const [gameOver, setGameOver] = useState(false)\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer()\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer)\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\r\n    rowsCleared\r\n  )\r\n\r\n  console.log('re-render')\r\n\r\n  const movePlayer = (dir) => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 })\r\n    }\r\n  }\r\n\r\n  const startGame = () => {\r\n    console.log('New Game')\r\n    // Reset everything\r\n    setDropTime(1000)\r\n    setStage(createStage())\r\n    resetPlayer()\r\n    setGameOver(false)\r\n    setScore(0)\r\n    setRows(0)\r\n    setLevel(0)\r\n  }\r\n\r\n  const drop = () => {\r\n    //increasing level when player clears 10 rows\r\n    if (rows > (level + 1) * 10) {\r\n      setLevel((prev) => prev + 1)\r\n      setDropTime(1000 / (level + 1) + 200)\r\n    }\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false })\r\n    } else {\r\n      // Game Over\r\n      if (player.pos.y < 1) {\r\n        console.log('GAME OVER!!!')\r\n        setGameOver(true)\r\n        setDropTime(null)\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true })\r\n    }\r\n  }\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 40) {\r\n        setDropTime(1000 / (level + 1) + 200)\r\n        console.log('interval on')\r\n      }\r\n    }\r\n  }\r\n\r\n  const dropPlayer = () => {\r\n    console.log('interval off')\r\n    setDropTime(null)\r\n    drop()\r\n  }\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1)\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1)\r\n      } else if (keyCode === 40) {\r\n        dropPlayer()\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  useInterval(() => {\r\n    drop()\r\n  }, dropTime)\r\n  return (\r\n    <StyledTetrisWrapper\r\n      role='button'\r\n      tabIndex='0'\r\n      onKeyDown={(e) => move(e)}\r\n      onKeyUp={keyUp}\r\n    >\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text='Game Over' />\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`Rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n            </div>\r\n          )}\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  )\r\n}\r\n\r\nexport default Tetris\r\n","import { useState, useCallback } from 'react'\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos'\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers'\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  })\r\n\r\n  const rotate = (matrix, dir) => {\r\n    const rotatedTetro = matrix.map((_, index) =>\r\n      matrix.map((col) => col[index])\r\n    )\r\n\r\n    if (dir > 0) return rotatedTetro.map((row) => row.reverse())\r\n    return rotatedTetro.reverse()\r\n  }\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player))\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir)\r\n    const pos = clonedPlayer.pos.x\r\n    let offset = 1\r\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset\r\n      offset = -(offset + (offset > 0 ? 1 : -1))\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir)\r\n        clonedPlayer.pos.x = pos\r\n        return\r\n      }\r\n    }\r\n    setPlayer(clonedPlayer)\r\n  }\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer((prev) => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided,\r\n    }))\r\n  }\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    })\r\n  }, [])\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate]\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\n\r\nexport const useGameStatus = (rowsCleared) => {\r\n  const [score, setScore] = useState(0)\r\n  const [rows, setRows] = useState(0)\r\n  const [level, setLevel] = useState(0)\r\n\r\n  const linePoints = [40, 100, 300, 1200]\r\n\r\n  const calcScore = useCallback(() => {\r\n    if (rowsCleared > 0) {\r\n      setScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1))\r\n      setRows((prev) => prev + rowsCleared)\r\n    }\r\n  }, [level, linePoints, rowsCleared])\r\n  useEffect(() => {\r\n    calcScore()\r\n  }, [calcScore, rowsCleared, score])\r\n  return [score, setScore, rows, setRows, level, setLevel]\r\n}\r\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react'\r\nimport Tetris from './components/Tetris'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='App'>\r\n      <Tetris />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}